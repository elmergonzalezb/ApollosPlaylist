{"ast":null,"code":"import _defineProperty from \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/App.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Sidebar from './modules/sidebar/Sidebar';\nimport LoginPage from './modules/sign-in/LoginPage';\nimport MyPlaylists from './modules/my-playlists/MyPlaylists';\nimport Navbar from './modules/navbar/Navbar';\nimport PlaylistDetails from './modules/playlist-details/PlaylistDetails';\nimport CreatePlaylist from './modules/create-playlist/CreatePlaylist';\nimport UserTopTracks from './modules/user-top-tracks/UserTopTracks';\nimport { pageChangeAction } from './actions/navigationActions';\nimport { getCookie } from './common/constants';\n\nclass App extends Component {\n  render() {\n    let loggedIn = false;\n    let token = getCookie('spotifyAccessToken');\n\n    if (token !== '') {\n      loggedIn = true;\n    }\n\n    let currentPageUpdate = () => {\n      let page = window.location.hash.split('/')[1] ? window.location.hash.split('/')[1] : '';\n      this.props.handlePageChange(page);\n    };\n\n    window.addEventListener('hashchange', currentPageUpdate);\n    window.addEventListener('load', currentPageUpdate);\n    return React.createElement(HashRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex\",\n      id: \"app-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, loggedIn ? React.createElement(\"div\", {\n      className: \"w-100 d-flex\",\n      id: \"logged-in-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"playlists-view-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/(|my-playlists)/\",\n      component: MyPlaylists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/create-playlist\",\n      component: CreatePlaylist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/user/:userId/playlist/:playlistId\",\n      component: PlaylistDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/top_tracks\",\n      component: UserTopTracks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))) : React.createElement(LoginPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nconst mapDispatchToProps = dispatch => ({\n  handlePageChange: newPage => dispatch(pageChangeAction(newPage))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/App.jsx"],"names":["React","Component","connect","HashRouter","Route","Sidebar","LoginPage","MyPlaylists","Navbar","PlaylistDetails","CreatePlaylist","UserTopTracks","pageChangeAction","getCookie","App","render","loggedIn","token","currentPageUpdate","page","window","location","hash","split","props","handlePageChange","addEventListener","mapStateToProps","state","mapDispatchToProps","dispatch","newPage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Sidebar from './modules/sidebar/Sidebar';\nimport LoginPage from './modules/sign-in/LoginPage';\nimport MyPlaylists from './modules/my-playlists/MyPlaylists';\nimport Navbar from './modules/navbar/Navbar';\nimport PlaylistDetails from './modules/playlist-details/PlaylistDetails';\nimport CreatePlaylist from './modules/create-playlist/CreatePlaylist';\nimport UserTopTracks from './modules/user-top-tracks/UserTopTracks';\nimport { pageChangeAction } from './actions/navigationActions';\nimport { getCookie } from './common/constants';\nclass App extends Component {\n  render() {\n    let loggedIn = false;\n    let token = getCookie('spotifyAccessToken');\n\n    if (token !== '') {\n      loggedIn = true;\n    }\n\n    let currentPageUpdate = () => {\n      let page = window.location.hash.split('/')[1] ? window.location.hash.split('/')[1] : '';\n      this.props.handlePageChange(page);\n    };\n\n    window.addEventListener('hashchange', currentPageUpdate);\n    window.addEventListener('load', currentPageUpdate);\n\n    return (\n      <HashRouter>\n        <div className=\"d-flex\" id=\"app-wrapper\">\n          {loggedIn ? (\n            <div className=\"w-100 d-flex\" id=\"logged-in-wrapper\">\n              <Sidebar />\n              <div id=\"playlists-view-wrapper\">\n                <Navbar />\n                <Route path=\"/(|my-playlists)/\" component={MyPlaylists} />\n                <Route path=\"/create-playlist\" component={CreatePlaylist} />\n                <Route path=\"/user/:userId/playlist/:playlistId\" component={PlaylistDetails} />\n                <Route path=\"/top_tracks\" component={UserTopTracks} />\n              </div>\n            </div>\n          ) : (\n            <LoginPage />\n          )}\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handlePageChange: newPage => dispatch(pageChangeAction(newPage)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n"]},"metadata":{},"sourceType":"module"}