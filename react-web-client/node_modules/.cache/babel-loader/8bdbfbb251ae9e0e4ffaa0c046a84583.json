{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/playlist-details/subcomponents/PlaylistStatistics.jsx\";\nimport React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport Loading from '../../../common/components/Loading';\nimport { ProgressBar, Row, Col } from 'react-bootstrap';\nimport { getPlaylistStatistics } from '../../../common/apiUtils';\nimport { deepCamelCaseKeys } from '../../../common/constants';\nexport default class PlaylistStatistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stats: null\n    };\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    let _this$props = this.props,\n        playlistId = _this$props.playlistId,\n        userId = _this$props.userId; // Fetch the playlist's statistics\n\n    getPlaylistStatistics(playlistId, userId).then(response => {\n      this.setState({\n        stats: deepCamelCaseKeys(response.data)\n      });\n    });\n  }\n\n  renderAttribute(attributeName) {\n    let stats = this.state.stats;\n    return React.createElement(\"div\", {\n      className: \"m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0 attribute-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, attributeName.charAt(0).toUpperCase() + attributeName.slice(1), \":\"), React.createElement(ProgressBar, {\n      srOnly: true,\n      max: stats[attributeName].max,\n      min: stats[attributeName].min,\n      now: stats[attributeName].value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    let stats = this.state.stats;\n\n    if (!stats) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Row, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderAttribute('energy')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderAttribute('danceability')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderAttribute('valence')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.renderAttribute('instrumentalness')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.renderAttribute('acousticness')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderAttribute('liveness')), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      className: \"text-center\",\n      id: \"statistics-tempo-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0 attribute-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Average Tempo: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, Math.round(stats.tempo.value), \"BPM\")), React.createElement(Col, {\n      xs: 12,\n      md: 6,\n      className: \"text-center\",\n      id: \"statistics-loudness-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"mb-0 attribute-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Average Volume:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, Math.round(stats.loudness.value), \"db\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/playlist-details/subcomponents/PlaylistStatistics.jsx"],"names":["React","Component","autoBind","Loading","ProgressBar","Row","Col","getPlaylistStatistics","deepCamelCaseKeys","PlaylistStatistics","constructor","props","state","stats","componentDidMount","playlistId","userId","then","response","setState","data","renderAttribute","attributeName","charAt","toUpperCase","slice","max","min","value","render","Math","round","tempo","loudness"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport Loading from '../../../common/components/Loading';\nimport { ProgressBar, Row, Col } from 'react-bootstrap';\nimport { getPlaylistStatistics } from '../../../common/apiUtils';\nimport { deepCamelCaseKeys } from '../../../common/constants';\n\nexport default class PlaylistStatistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stats: null,\n    };\n\n    autoBind(this);\n  }\n  componentDidMount() {\n    let { playlistId, userId } = this.props;\n\n    // Fetch the playlist's statistics\n    getPlaylistStatistics(playlistId, userId).then(response => {\n      this.setState({ stats: deepCamelCaseKeys(response.data) });\n    });\n  }\n\n  renderAttribute(attributeName) {\n    let { stats } = this.state;\n\n    return (\n      <div className=\"m-3\">\n        {/* Capitalize the first letter of each key and display the name and percentage */}\n        <p className=\"mb-0 attribute-name\">{attributeName.charAt(0).toUpperCase() + attributeName.slice(1)}:</p>\n        <ProgressBar\n          srOnly\n          max={stats[attributeName].max}\n          min={stats[attributeName].min}\n          now={stats[attributeName].value}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    let { stats } = this.state;\n\n    if (!stats) {\n      return <Loading />;\n    }\n\n    return (\n      <Row className=\"p-2\">\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('energy')}\n        </Col>\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('danceability')}\n        </Col>\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('valence')}\n        </Col>\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('instrumentalness')}\n        </Col>\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('acousticness')}\n        </Col>\n        <Col xs={12} md={6} lg={4}>\n          {this.renderAttribute('liveness')}\n        </Col>\n        <Col xs={12} md={6} className=\"text-center\" id=\"statistics-tempo-wrapper\">\n          <p className=\"mb-0 attribute-name\">Average Tempo: </p>\n          <p>{Math.round(stats.tempo.value)}BPM</p>\n        </Col>\n        <Col xs={12} md={6} className=\"text-center\" id=\"statistics-loudness-wrapper\">\n          <p className=\"mb-0 attribute-name\">Average Volume:</p>\n          <p>{Math.round(stats.loudness.value)}db</p>\n        </Col>\n      </Row>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}