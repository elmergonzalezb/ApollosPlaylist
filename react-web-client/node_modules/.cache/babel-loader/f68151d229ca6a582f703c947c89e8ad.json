{"ast":null,"code":"import { getCookie } from './constants';\nimport axios from 'axios';\nlet isProd = window.location.hostname === 'apollosplaylist.com';\nexport let api = isProd ? 'https://apollosplaylist.com' : 'http://localhost:8000';\nexport function getUserProfileData() {\n  return axios.get(\"\".concat(api, \"/users/user\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken')\n    }\n  });\n}\nexport function getUserPlaylistData(pageNumber = 0) {\n  return axios.get(\"\".concat(api, \"/playlists/personal-playlists\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      limit: 12,\n      offset: pageNumber * 12\n    }\n  });\n}\nexport function getUserEditablePlaylists() {\n  return axios.get(\"\".concat(api, \"/users/editable-playlists\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken')\n    }\n  });\n}\nexport function getDetailedPlaylistData(playlistSpotifyId, userSpotifyId) {\n  return axios.get(\"\".concat(api, \"/playlists/playlist\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId\n    },\n    contentType: 'application/json'\n  });\n}\nexport function getPlaylistStatistics(playlistSpotifyId, userSpotifyId) {\n  return axios.get(\"\".concat(api, \"/playlists/playlist-stats\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId\n    }\n  });\n}\nexport function getTrackData(trackId) {\n  return axios.get(\"\".concat(api, \"/tracks/track\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      track_id: trackId\n    }\n  });\n}\nexport function addTracksToPlaylist(userSpotifyId, playlistSpotifyId, trackIds) {\n  return axios.post(\"\".concat(api, \"/playlists/add-tracks\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      playlistSpotifyId,\n      userSpotifyId,\n      trackIds\n    })\n  });\n}\nexport function userPlaylistUnfollow(userSpotifyId, playlistSpotifyId) {\n  return axios.delete(\"\".concat(api, \"/playlists/unfollow-playlist\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      playlistSpotifyId,\n      userSpotifyId\n    })\n  });\n}\nexport function userPlaylistFollowPlaylist(userSpotifyId, playlistSpotifyId) {\n  return axios.get(\"\".concat(api, \"/playlists/follow-playlist\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId\n    }\n  });\n}\nexport function getUserTopTracks() {\n  return axios.get(\"\".concat(api, \"/users/top_tracks\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken')\n    }\n  });\n}\nexport function getTracksFromAttributes(state) {\n  let energy = state.energy,\n      danceability = state.danceability,\n      acousticness = state.acousticness,\n      tempo = state.tempo;\n  return axios.get(\"\".concat(api, \"/playlists/get-tracks-from-attributes\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      energy,\n      danceability,\n      acousticness,\n      tempoLow: tempo[0],\n      tempoHigh: tempo[1]\n    }\n  });\n}\nexport function createUserPlaylistWithTracks(userSpotifyId, playlistName, tracks) {\n  return axios.post(\"\".concat(api, \"/playlists/create-playlist-with-tracks\"), {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistName,\n      tracks\n    })\n  });\n}","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/common/apiUtils.js"],"names":["getCookie","axios","isProd","window","location","hostname","api","getUserProfileData","get","headers","crossDomain","params","token","getUserPlaylistData","pageNumber","limit","offset","getUserEditablePlaylists","getDetailedPlaylistData","playlistSpotifyId","userSpotifyId","contentType","getPlaylistStatistics","getTrackData","trackId","track_id","addTracksToPlaylist","trackIds","post","data","JSON","stringify","userPlaylistUnfollow","delete","userPlaylistFollowPlaylist","getUserTopTracks","getTracksFromAttributes","state","energy","danceability","acousticness","tempo","tempoLow","tempoHigh","createUserPlaylistWithTracks","playlistName","tracks"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,qBAA1C;AACA,OAAO,IAAIC,GAAG,GAAGJ,MAAM,GAAG,6BAAH,GAAmC,uBAAnD;AAEP,OAAO,SAASK,kBAAT,GAA8B;AACnC,SAAON,KAAK,CAACO,GAAN,WAAaF,GAAb,kBAA+B;AACpCG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD2B;AAIpCC,IAAAA,WAAW,EAAE,IAJuB;AAKpCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD;AADV;AAL4B,GAA/B,CAAP;AASD;AAED,OAAO,SAASa,mBAAT,CAA6BC,UAAU,GAAG,CAA1C,EAA6C;AAClD,SAAOb,KAAK,CAACO,GAAN,WAAaF,GAAb,oCAAiD;AACtDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD6C;AAItDC,IAAAA,WAAW,EAAE,IAJyC;AAKtDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENe,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAEF,UAAU,GAAG;AAHf;AAL8C,GAAjD,CAAP;AAWD;AAED,OAAO,SAASG,wBAAT,GAAoC;AACzC,SAAOhB,KAAK,CAACO,GAAN,WAAaF,GAAb,gCAA6C;AAClDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADyC;AAIlDC,IAAAA,WAAW,EAAE,IAJqC;AAKlDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD;AADV;AAL0C,GAA7C,CAAP;AASD;AAED,OAAO,SAASkB,uBAAT,CAAiCC,iBAAjC,EAAoDC,aAApD,EAAmE;AACxE,SAAOnB,KAAK,CAACO,GAAN,WAAaF,GAAb,0BAAuC;AAC5CG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADmC;AAI5CC,IAAAA,WAAW,EAAE,IAJ+B;AAK5CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENoB,MAAAA,aAFM;AAGND,MAAAA;AAHM,KALoC;AAU5CE,IAAAA,WAAW,EAAE;AAV+B,GAAvC,CAAP;AAYD;AAED,OAAO,SAASC,qBAAT,CAA+BH,iBAA/B,EAAkDC,aAAlD,EAAiE;AACtE,SAAOnB,KAAK,CAACO,GAAN,WAAaF,GAAb,gCAA6C;AAClDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADyC;AAIlDC,IAAAA,WAAW,EAAE,IAJqC;AAKlDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENoB,MAAAA,aAFM;AAGND,MAAAA;AAHM;AAL0C,GAA7C,CAAP;AAWD;AAED,OAAO,SAASI,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAOvB,KAAK,CAACO,GAAN,WAAaF,GAAb,oBAAiC;AACtCG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD6B;AAItCC,IAAAA,WAAW,EAAE,IAJyB;AAKtCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENyB,MAAAA,QAAQ,EAAED;AAFJ;AAL8B,GAAjC,CAAP;AAUD;AAED,OAAO,SAASE,mBAAT,CAA6BN,aAA7B,EAA4CD,iBAA5C,EAA+DQ,QAA/D,EAAyE;AAC9E,SAAO1B,KAAK,CAAC2B,IAAN,WAActB,GAAd,4BAA0C;AAC/CG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADsC;AAI/CC,IAAAA,WAAW,EAAE,IAJkC;AAK/CmB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBnB,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADG;AAEnBmB,MAAAA,iBAFmB;AAGnBC,MAAAA,aAHmB;AAInBO,MAAAA;AAJmB,KAAf;AALyC,GAA1C,CAAP;AAYD;AAED,OAAO,SAASK,oBAAT,CAA8BZ,aAA9B,EAA6CD,iBAA7C,EAAgE;AACrE,SAAOlB,KAAK,CAACgC,MAAN,WAAgB3B,GAAhB,mCAAmD;AACxDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD+C;AAIxDC,IAAAA,WAAW,EAAE,IAJ2C;AAKxDmB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBnB,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADG;AAEnBmB,MAAAA,iBAFmB;AAGnBC,MAAAA;AAHmB,KAAf;AALkD,GAAnD,CAAP;AAWD;AAED,OAAO,SAASc,0BAAT,CAAoCd,aAApC,EAAmDD,iBAAnD,EAAsE;AAC3E,SAAOlB,KAAK,CAACO,GAAN,WAAaF,GAAb,iCAA8C;AACnDG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAD0C;AAInDC,IAAAA,WAAW,EAAE,IAJsC;AAKnDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENoB,MAAAA,aAFM;AAGND,MAAAA;AAHM;AAL2C,GAA9C,CAAP;AAWD;AAED,OAAO,SAASgB,gBAAT,GAA4B;AACjC,SAAOlC,KAAK,CAACO,GAAN,WAAaF,GAAb,wBAAqC;AAC1CG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADiC;AAI1CC,IAAAA,WAAW,EAAE,IAJ6B;AAK1CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD;AADV;AALkC,GAArC,CAAP;AASD;AAED,OAAO,SAASoC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA,MACvCC,MADuC,GACOD,KADP,CACvCC,MADuC;AAAA,MAC/BC,YAD+B,GACOF,KADP,CAC/BE,YAD+B;AAAA,MACjBC,YADiB,GACOH,KADP,CACjBG,YADiB;AAAA,MACHC,KADG,GACOJ,KADP,CACHI,KADG;AAE7C,SAAOxC,KAAK,CAACO,GAAN,WAAaF,GAAb,4CAAyD;AAC9DG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADqD;AAI9DC,IAAAA,WAAW,EAAE,IAJiD;AAK9DC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADV;AAENsC,MAAAA,MAFM;AAGNC,MAAAA,YAHM;AAINC,MAAAA,YAJM;AAKNE,MAAAA,QAAQ,EAAED,KAAK,CAAC,CAAD,CALT;AAMNE,MAAAA,SAAS,EAAEF,KAAK,CAAC,CAAD;AANV;AALsD,GAAzD,CAAP;AAcD;AAED,OAAO,SAASG,4BAAT,CAAsCxB,aAAtC,EAAqDyB,YAArD,EAAmEC,MAAnE,EAA2E;AAChF,SAAO7C,KAAK,CAAC2B,IAAN,WAActB,GAAd,6CAA2D;AAChEG,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KADuD;AAIhEC,IAAAA,WAAW,EAAE,IAJmD;AAKhEmB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBnB,MAAAA,KAAK,EAAEZ,SAAS,CAAC,oBAAD,CADG;AAEnBoB,MAAAA,aAFmB;AAGnByB,MAAAA,YAHmB;AAInBC,MAAAA;AAJmB,KAAf;AAL0D,GAA3D,CAAP;AAYD","sourcesContent":["import { getCookie } from './constants';\nimport axios from 'axios';\n\nlet isProd = window.location.hostname === 'apollosplaylist.com';\nexport let api = isProd ? 'https://apollosplaylist.com' : 'http://localhost:8000';\n\nexport function getUserProfileData() {\n  return axios.get(`${api}/users/user`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n    },\n  });\n}\n\nexport function getUserPlaylistData(pageNumber = 0) {\n  return axios.get(`${api}/playlists/personal-playlists`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      limit: 12,\n      offset: pageNumber * 12,\n    },\n  });\n}\n\nexport function getUserEditablePlaylists() {\n  return axios.get(`${api}/users/editable-playlists`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n    },\n  });\n}\n\nexport function getDetailedPlaylistData(playlistSpotifyId, userSpotifyId) {\n  return axios.get(`${api}/playlists/playlist`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId,\n    },\n    contentType: 'application/json',\n  });\n}\n\nexport function getPlaylistStatistics(playlistSpotifyId, userSpotifyId) {\n  return axios.get(`${api}/playlists/playlist-stats`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId,\n    },\n  });\n}\n\nexport function getTrackData(trackId) {\n  return axios.get(`${api}/tracks/track`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      track_id: trackId,\n    },\n  });\n}\n\nexport function addTracksToPlaylist(userSpotifyId, playlistSpotifyId, trackIds) {\n  return axios.post(`${api}/playlists/add-tracks`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      playlistSpotifyId,\n      userSpotifyId,\n      trackIds,\n    }),\n  });\n}\n\nexport function userPlaylistUnfollow(userSpotifyId, playlistSpotifyId) {\n  return axios.delete(`${api}/playlists/unfollow-playlist`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      playlistSpotifyId,\n      userSpotifyId,\n    }),\n  });\n}\n\nexport function userPlaylistFollowPlaylist(userSpotifyId, playlistSpotifyId) {\n  return axios.get(`${api}/playlists/follow-playlist`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistSpotifyId,\n    },\n  });\n}\n\nexport function getUserTopTracks() {\n  return axios.get(`${api}/users/top_tracks`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n    },\n  });\n}\n\nexport function getTracksFromAttributes(state) {\n  let { energy, danceability, acousticness, tempo } = state;\n  return axios.get(`${api}/playlists/get-tracks-from-attributes`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    params: {\n      token: getCookie('spotifyAccessToken'),\n      energy,\n      danceability,\n      acousticness,\n      tempoLow: tempo[0],\n      tempoHigh: tempo[1],\n    },\n  });\n}\n\nexport function createUserPlaylistWithTracks(userSpotifyId, playlistName, tracks) {\n  return axios.post(`${api}/playlists/create-playlist-with-tracks`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    crossDomain: true,\n    data: JSON.stringify({\n      token: getCookie('spotifyAccessToken'),\n      userSpotifyId,\n      playlistName,\n      tracks,\n    }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}