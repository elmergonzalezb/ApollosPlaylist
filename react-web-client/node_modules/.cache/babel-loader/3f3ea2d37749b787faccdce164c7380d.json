{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/my-playlists/MyPlaylists.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport autoBind from 'react-autobind';\nimport PlaylistsGrid from '../playlists-grid/PlaylistsGrid';\nimport { getPersonalPlaylistDataAction, clearPlaylistDataAction } from '../../actions/playlistActions';\n\nclass PlaylistsView extends PureComponent {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.clearPlaylistData();\n  }\n\n  render() {\n    let _this$props = this.props,\n        playlists = _this$props.playlists,\n        loadPersonalPlaylistData = _this$props.loadPersonalPlaylistData,\n        clearPlaylistData = _this$props.clearPlaylistData;\n    return React.createElement(PlaylistsGrid, {\n      playlists: playlists,\n      loadPlaylistData: loadPersonalPlaylistData,\n      clearPlaylistData: clearPlaylistData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  playlists: state.playlists\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPersonalPlaylistData: pageNumber => dispatch(getPersonalPlaylistDataAction(pageNumber)),\n  clearPlaylistData: () => dispatch(clearPlaylistDataAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistsView);","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/my-playlists/MyPlaylists.jsx"],"names":["React","PureComponent","connect","autoBind","PlaylistsGrid","getPersonalPlaylistDataAction","clearPlaylistDataAction","PlaylistsView","constructor","props","componentWillUnmount","clearPlaylistData","render","playlists","loadPersonalPlaylistData","mapStateToProps","state","mapDispatchToProps","dispatch","pageNumber"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,6BAAT,EAAwCC,uBAAxC,QAAuE,+BAAvE;;AAEA,MAAMC,aAAN,SAA4BN,aAA5B,CAA0C;AACxCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAN,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,KAAL,CAAWE,iBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBAC0D,KAAKH,KAD/D;AAAA,QACDI,SADC,eACDA,SADC;AAAA,QACUC,wBADV,eACUA,wBADV;AAAA,QACoCH,iBADpC,eACoCA,iBADpC;AAGP,WACE,oBAAC,aAAD;AACE,MAAA,SAAS,EAAEE,SADb;AAEE,MAAA,gBAAgB,EAAEC,wBAFpB;AAGE,MAAA,iBAAiB,EAAEH,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AArBuC;;AAwB1C,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,SAAS,EAAEG,KAAK,CAACH;AADe,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCJ,EAAAA,wBAAwB,EAAEK,UAAU,IAAID,QAAQ,CAACb,6BAA6B,CAACc,UAAD,CAA9B,CADV;AAEtCR,EAAAA,iBAAiB,EAAE,MAAMO,QAAQ,CAACZ,uBAAuB,EAAxB;AAFK,CAAL,CAAnC;;AAKA,eAAeJ,OAAO,CACpBa,eADoB,EAEpBE,kBAFoB,CAAP,CAGbV,aAHa,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport autoBind from 'react-autobind';\nimport PlaylistsGrid from '../playlists-grid/PlaylistsGrid';\nimport { getPersonalPlaylistDataAction, clearPlaylistDataAction } from '../../actions/playlistActions';\n\nclass PlaylistsView extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.clearPlaylistData();\n  }\n\n  render() {\n    let { playlists, loadPersonalPlaylistData, clearPlaylistData } = this.props;\n\n    return (\n      <PlaylistsGrid\n        playlists={playlists}\n        loadPlaylistData={loadPersonalPlaylistData}\n        clearPlaylistData={clearPlaylistData}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  playlists: state.playlists,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPersonalPlaylistData: pageNumber => dispatch(getPersonalPlaylistDataAction(pageNumber)),\n  clearPlaylistData: () => dispatch(clearPlaylistDataAction()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(PlaylistsView);\n"]},"metadata":{},"sourceType":"module"}