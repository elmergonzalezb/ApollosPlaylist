{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/sign-in/SpotifyLoginButton.jsx\";\nimport React, { Component } from 'react';\nimport SpotifyLogin from 'react-spotify-login';\nimport { spotifyScopes, setCookie } from '../../common/constants';\nimport autoBind from 'react-autobind';\nimport { redirectURI, clientID } from './constants';\nimport './sign-in.css';\n\nclass SpotifyLoginButton extends Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  async handleAccessToken(data) {\n    let token = data.access_token; // Set the token in cookies, we want to make sure that this happens first so we await it.\n\n    await setCookie('spotifyAccessToken', token, 1);\n    document.location.reload();\n  }\n\n  render() {\n    return React.createElement(SpotifyLogin, {\n      clientId: clientID,\n      redirectUri: redirectURI,\n      onSuccess: this.handleAccessToken,\n      onFailure: error => console.log(error),\n      scope: spotifyScopes,\n      className: \"btn btn-md btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SpotifyLoginButton;","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/sign-in/SpotifyLoginButton.jsx"],"names":["React","Component","SpotifyLogin","spotifyScopes","setCookie","autoBind","redirectURI","clientID","SpotifyLoginButton","constructor","props","handleAccessToken","data","token","access_token","document","location","reload","render","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,wBAAzC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,OAAO,eAAP;;AAEA,MAAMC,kBAAN,SAAiCP,SAAjC,CAA2C;AACzCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,QAAMM,iBAAN,CAAwBC,IAAxB,EAA8B;AAC5B,QAAIC,KAAK,GAAGD,IAAI,CAACE,YAAjB,CAD4B,CAG5B;;AACA,UAAMV,SAAS,CAAC,oBAAD,EAAuBS,KAAvB,EAA8B,CAA9B,CAAf;AACAE,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,MAAlB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAEX,QADZ;AAEE,MAAA,WAAW,EAAED,WAFf;AAGE,MAAA,SAAS,EAAE,KAAKK,iBAHlB;AAIE,MAAA,SAAS,EAAEQ,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJtB;AAKE,MAAA,KAAK,EAAEhB,aALT;AAME,MAAA,SAAS,EAAC,wBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AA1BwC;;AA6B3C,eAAeK,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport SpotifyLogin from 'react-spotify-login';\nimport { spotifyScopes, setCookie } from '../../common/constants';\nimport autoBind from 'react-autobind';\nimport { redirectURI, clientID } from './constants';\nimport './sign-in.css';\n\nclass SpotifyLoginButton extends Component {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n  }\n\n  async handleAccessToken(data) {\n    let token = data.access_token;\n\n    // Set the token in cookies, we want to make sure that this happens first so we await it.\n    await setCookie('spotifyAccessToken', token, 1);\n    document.location.reload();\n  }\n\n  render() {\n    return (\n      <SpotifyLogin\n        clientId={clientID}\n        redirectUri={redirectURI}\n        onSuccess={this.handleAccessToken}\n        onFailure={error => console.log(error)}\n        scope={spotifyScopes}\n        className=\"btn btn-md btn-primary\"\n      />\n    );\n  }\n}\n\nexport default SpotifyLoginButton;\n"]},"metadata":{},"sourceType":"module"}