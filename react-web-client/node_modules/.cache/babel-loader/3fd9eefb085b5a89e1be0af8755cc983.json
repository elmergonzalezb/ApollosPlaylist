{"ast":null,"code":"import { getUserPlaylistData } from '../common/apiUtils';\nimport { deepCamelCaseKeys } from '../common/constants';\nexport const getPersonalPlaylistDataAction = pageNumber => async dispatch => {\n  let personalPlaylistData = {};\n  dispatch(setLoadingPropertyAction(true));\n  await getUserPlaylistData(pageNumber).then(response => {\n    personalPlaylistData = deepCamelCaseKeys(response.data);\n  }).then(() => {\n    dispatch({\n      type: 'GET_USER_PLAYLIST_DATA',\n      payload: {\n        pageNumber: pageNumber,\n        data: personalPlaylistData\n      }\n    });\n  }).catch(error => {\n    dispatch({\n      type: 'GET_USER_PLAYLIST_DATA_ERROR',\n      payload: {\n        status: error.request.status,\n        errorMessage: error.request.message\n      }\n    });\n  });\n  dispatch(setLoadingPropertyAction(false));\n};\nexport const setLoadingPropertyAction = loading => {\n  return {\n    type: 'SET_LOADING_PROPERTY',\n    payload: loading\n  };\n};\nexport const clearPlaylistDataAction = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_PLAYLIST_DATA',\n    payload: null\n  });\n};","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/actions/playlistActions.js"],"names":["getUserPlaylistData","deepCamelCaseKeys","getPersonalPlaylistDataAction","pageNumber","dispatch","personalPlaylistData","setLoadingPropertyAction","then","response","data","type","payload","catch","error","status","request","errorMessage","message","loading","clearPlaylistDataAction"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,oBAApC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,6BAA6B,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AAC3E,MAAIC,oBAAoB,GAAG,EAA3B;AAEAD,EAAAA,QAAQ,CAACE,wBAAwB,CAAC,IAAD,CAAzB,CAAR;AACA,QAAMN,mBAAmB,CAACG,UAAD,CAAnB,CACHI,IADG,CACEC,QAAQ,IAAI;AAChBH,IAAAA,oBAAoB,GAAGJ,iBAAiB,CAACO,QAAQ,CAACC,IAAV,CAAxC;AACD,GAHG,EAIHF,IAJG,CAIE,MAAM;AACVH,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,wBADC;AAEPC,MAAAA,OAAO,EAAE;AAAER,QAAAA,UAAU,EAAEA,UAAd;AAA0BM,QAAAA,IAAI,EAAEJ;AAAhC;AAFF,KAAD,CAAR;AAID,GATG,EAUHO,KAVG,CAUGC,KAAK,IAAI;AACdT,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAE,8BADC;AAEPC,MAAAA,OAAO,EAAE;AAAEG,QAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAcD,MAAxB;AAAgCE,QAAAA,YAAY,EAAEH,KAAK,CAACE,OAAN,CAAcE;AAA5D;AAFF,KAAD,CAAR;AAID,GAfG,CAAN;AAgBAb,EAAAA,QAAQ,CAACE,wBAAwB,CAAC,KAAD,CAAzB,CAAR;AACD,CArBM;AAuBP,OAAO,MAAMA,wBAAwB,GAAGY,OAAO,IAAI;AACjD,SAAO;AACLR,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,uBAAuB,GAAG,MAAMf,QAAQ,IAAI;AACvDA,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import { getUserPlaylistData } from '../common/apiUtils';\nimport { deepCamelCaseKeys } from '../common/constants';\n\nexport const getPersonalPlaylistDataAction = pageNumber => async dispatch => {\n  let personalPlaylistData = {};\n\n  dispatch(setLoadingPropertyAction(true));\n  await getUserPlaylistData(pageNumber)\n    .then(response => {\n      personalPlaylistData = deepCamelCaseKeys(response.data);\n    })\n    .then(() => {\n      dispatch({\n        type: 'GET_USER_PLAYLIST_DATA',\n        payload: { pageNumber: pageNumber, data: personalPlaylistData },\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: 'GET_USER_PLAYLIST_DATA_ERROR',\n        payload: { status: error.request.status, errorMessage: error.request.message },\n      });\n    });\n  dispatch(setLoadingPropertyAction(false));\n};\n\nexport const setLoadingPropertyAction = loading => {\n  return {\n    type: 'SET_LOADING_PROPERTY',\n    payload: loading,\n  };\n};\n\nexport const clearPlaylistDataAction = () => dispatch => {\n  dispatch({\n    type: 'CLEAR_PLAYLIST_DATA',\n    payload: null,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}