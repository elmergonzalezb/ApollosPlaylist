{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/navbar/Navbar.jsx\";\nimport React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport { connect } from 'react-redux';\nimport { getPersonalPlaylistDataAction } from '../../actions/playlistActions';\nimport { setSidebarStatusAction } from '../../actions/navigationActions';\nimport { isBelowMediumBreakpoint } from '../../common/constants';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  handleSidebarMenuClick() {\n    let _this$props = this.props,\n        open = _this$props.nav.sidebar.open,\n        setSidebarOpenStatus = _this$props.setSidebarOpenStatus;\n\n    if (open) {\n      setSidebarOpenStatus(false);\n    } else {\n      setSidebarOpenStatus(true);\n    }\n  }\n\n  render() {\n    let currentPage = this.props.nav.currentPage;\n    return React.createElement(\"div\", {\n      id: \"playlists-navbar-wrapper\",\n      className: \"playlists-navbar-dimensions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"playlists-navbar\",\n      className: \"playlists-navbar-dimensions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, isBelowMediumBreakpoint() && React.createElement(\"div\", {\n      className: \"p-1 ml-2 mr-2\",\n      onClick: this.handleSidebarMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-2x fa-bars color-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/my-playlists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      id: \"personal-playlists-button\",\n      className: currentPage === 'my-playlists' ? 'nav-button text-white underlined' : 'nav-button text-white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"My Playlists\")), React.createElement(Link, {\n      to: \"/create-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      id: \"create-playlists-button\",\n      className: currentPage === 'create-playlist' ? 'nav-button text-white underlined' : 'nav-button text-white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Create Playlist\")), React.createElement(Link, {\n      to: \"/top_tracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      id: \"top-tracks-button\",\n      className: currentPage === 'top_tracks' ? 'nav-button text-white underlined' : 'nav-button text-white',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Top\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  playlists: state.playlists,\n  nav: state.nav\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPersonalPlaylistData: pageNumber => dispatch(getPersonalPlaylistDataAction(0)),\n  setSidebarOpenStatus: open => dispatch(setSidebarStatusAction(open))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/navbar/Navbar.jsx"],"names":["React","Component","autoBind","connect","getPersonalPlaylistDataAction","setSidebarStatusAction","isBelowMediumBreakpoint","Link","Navbar","constructor","props","handleSidebarMenuClick","open","nav","sidebar","setSidebarOpenStatus","render","currentPage","mapStateToProps","state","playlists","mapDispatchToProps","dispatch","loadPersonalPlaylistData","pageNumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport { connect } from 'react-redux';\nimport { getPersonalPlaylistDataAction } from '../../actions/playlistActions';\nimport { setSidebarStatusAction } from '../../actions/navigationActions';\nimport { isBelowMediumBreakpoint } from '../../common/constants';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n  }\n\n  handleSidebarMenuClick() {\n    let {\n      nav: {\n        sidebar: { open },\n      },\n      setSidebarOpenStatus,\n    } = this.props;\n\n    if (open) {\n      setSidebarOpenStatus(false);\n    } else {\n      setSidebarOpenStatus(true);\n    }\n  }\n\n  render() {\n    let {\n      nav: { currentPage },\n    } = this.props;\n\n    return (\n      <div id=\"playlists-navbar-wrapper\" className=\"playlists-navbar-dimensions\">\n        <div id=\"playlists-navbar\" className=\"playlists-navbar-dimensions\">\n          {isBelowMediumBreakpoint() && (\n            <div className=\"p-1 ml-2 mr-2\" onClick={this.handleSidebarMenuClick}>\n              <i className=\"fa fa-2x fa-bars color-white\" />\n            </div>\n          )}\n\n          <Link to=\"/my-playlists\">\n            <h6\n              id=\"personal-playlists-button\"\n              className={currentPage === 'my-playlists' ? 'nav-button text-white underlined' : 'nav-button text-white'}\n            >\n              My Playlists\n            </h6>\n          </Link>\n          <Link to=\"/create-playlist\">\n            <h6\n              id=\"create-playlists-button\"\n              className={\n                currentPage === 'create-playlist' ? 'nav-button text-white underlined' : 'nav-button text-white'\n              }\n            >\n              Create Playlist\n            </h6>\n          </Link>\n\n          <Link to=\"/top_tracks\">\n            <h6\n              id=\"top-tracks-button\"\n              className={\n                currentPage === 'top_tracks' ? 'nav-button text-white underlined' : 'nav-button text-white'\n              }\n            >\n              Top\n            </h6>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  playlists: state.playlists,\n  nav: state.nav,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadPersonalPlaylistData: pageNumber => dispatch(getPersonalPlaylistDataAction(0)),\n  setSidebarOpenStatus: open => dispatch(setSidebarStatusAction(open)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Navbar);\n"]},"metadata":{},"sourceType":"module"}