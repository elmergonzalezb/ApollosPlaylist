{"ast":null,"code":"import { getUserProfileData } from '../common/apiUtils';\nimport { deepCamelCaseKeys } from '../common/constants';\nexport const getProfileDataAction = () => async dispatch => {\n  let profileData = {};\n  await getUserProfileData().then(response => {\n    profileData = response.data;\n  }).then(() => {\n    dispatch({\n      type: 'GET_USER_PROFILE_DATA',\n      payload: deepCamelCaseKeys(profileData)\n    });\n  }).catch(error => {\n    dispatch({\n      type: 'GET_USER_PROFILE_DATA_ERROR',\n      payload: {\n        status: error.request.status,\n        errorMessage: error.request.message\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/actions/profileActions.js"],"names":["getUserProfileData","deepCamelCaseKeys","getProfileDataAction","dispatch","profileData","then","response","data","type","payload","catch","error","status","request","errorMessage","message"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,oBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1D,MAAIC,WAAW,GAAG,EAAlB;AAEA,QAAMJ,kBAAkB,GACrBK,IADG,CACEC,QAAQ,IAAI;AAChBF,IAAAA,WAAW,GAAGE,QAAQ,CAACC,IAAvB;AACD,GAHG,EAIHF,IAJG,CAIE,MAAM;AACVF,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,uBADC;AAEPC,MAAAA,OAAO,EAAER,iBAAiB,CAACG,WAAD;AAFnB,KAAD,CAAR;AAID,GATG,EAUHM,KAVG,CAUGC,KAAK,IAAI;AACdR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,6BADC;AAEPC,MAAAA,OAAO,EAAE;AAAEG,QAAAA,MAAM,EAAED,KAAK,CAACE,OAAN,CAAcD,MAAxB;AAAgCE,QAAAA,YAAY,EAAEH,KAAK,CAACE,OAAN,CAAcE;AAA5D;AAFF,KAAD,CAAR;AAID,GAfG,CAAN;AAgBD,CAnBM","sourcesContent":["import { getUserProfileData } from '../common/apiUtils';\nimport { deepCamelCaseKeys } from '../common/constants';\n\nexport const getProfileDataAction = () => async dispatch => {\n  let profileData = {};\n\n  await getUserProfileData()\n    .then(response => {\n      profileData = response.data;\n    })\n    .then(() => {\n      dispatch({\n        type: 'GET_USER_PROFILE_DATA',\n        payload: deepCamelCaseKeys(profileData),\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: 'GET_USER_PROFILE_DATA_ERROR',\n        payload: { status: error.request.status, errorMessage: error.request.message },\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}