{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nconst isObject = value => typeof value === 'object' && value !== null; // Customized for this use-case\n\n\nconst isObjectCustom = value => isObject(value) && !(value instanceof RegExp) && !(value instanceof Error) && !(value instanceof Date);\n\nconst mapObject = (object, mapper, options, isSeen = new WeakMap()) => {\n  options = {\n    deep: false,\n    target: {},\n    ...options\n  };\n\n  if (isSeen.has(object)) {\n    return isSeen.get(object);\n  }\n\n  isSeen.set(object, options.target);\n  const _options = options,\n        target = _options.target;\n  delete options.target;\n\n  const mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);\n\n  if (Array.isArray(object)) {\n    return mapArray(object);\n  }\n\n  for (const _ref of Object.entries(object)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const key = _ref2[0];\n    const value = _ref2[1];\n\n    let _mapper = mapper(key, value, object),\n        _mapper2 = _slicedToArray(_mapper, 2),\n        newKey = _mapper2[0],\n        newValue = _mapper2[1];\n\n    if (options.deep && isObjectCustom(newValue)) {\n      newValue = Array.isArray(newValue) ? mapArray(newValue) : mapObject(newValue, mapper, options, isSeen);\n    }\n\n    target[newKey] = newValue;\n  }\n\n  return target;\n};\n\nmodule.exports = (object, mapper, options) => {\n  if (!isObject(object)) {\n    throw new TypeError(\"Expected an object, got `\".concat(object, \"` (\").concat(typeof object, \")\"));\n  }\n\n  return mapObject(object, mapper, options);\n};","map":null,"metadata":{},"sourceType":"script"}