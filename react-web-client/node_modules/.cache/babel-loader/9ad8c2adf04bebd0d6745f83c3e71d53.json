{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/user-top-tracks/UserTopTracks.jsx\";\nimport React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport Track from './subcomponents/Track';\nimport Loading from '../../common/components/Loading';\nimport ErrorView from '../../common/components/ErrorView';\nimport { getUserTopTracks } from '../../common/apiUtils';\nimport './user-top-tracks.css';\n\nclass UserTopTracks extends Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n    this.state = {\n      topTracks: null,\n      error: false\n    };\n  }\n\n  renderUserTopTracks() {\n    let _this$state = this.state,\n        topTracks = _this$state.topTracks,\n        error = _this$state.error,\n        errorStatus = _this$state.errorStatus,\n        errorMessage = _this$state.errorMessage;\n\n    if (error) {\n      return React.createElement(ErrorView, {\n        status: errorStatus,\n        errorMessage: errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    }\n\n    if (!topTracks) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      id: \"user-top-tracks-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-card m-3 p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"track-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, topTracks.map((track, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Track, {\n        trackName: track.name,\n        trackArtists: track.artists,\n        trackImage: track.image,\n        trackPreviewURL: track.preview_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n  componentDidMount() {\n    getUserTopTracks().then(response => {\n      this.setState({\n        topTracks: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        errorStatus: error.request.status,\n        errorMessage: JSON.parse(error.request.responseText).message,\n        error: true\n      });\n    });\n  }\n\n  render() {\n    return this.renderUserTopTracks();\n  }\n\n}\n\nexport default UserTopTracks;","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/user-top-tracks/UserTopTracks.jsx"],"names":["React","Component","autoBind","Track","Loading","ErrorView","getUserTopTracks","UserTopTracks","constructor","props","state","topTracks","error","renderUserTopTracks","errorStatus","errorMessage","map","track","index","name","artists","image","preview_url","componentDidMount","then","response","setState","data","catch","request","status","JSON","parse","responseText","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,OAAO,uBAAP;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEA,SAAKQ,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AAEDC,EAAAA,mBAAmB,GAAG;AAAA,sBACkC,KAAKH,KADvC;AAAA,QACdC,SADc,eACdA,SADc;AAAA,QACHC,KADG,eACHA,KADG;AAAA,QACIE,WADJ,eACIA,WADJ;AAAA,QACiBC,YADjB,eACiBA,YADjB;;AAGpB,QAAIH,KAAJ,EAAW;AACT,aAAO,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAEE,WAAnB;AAAgC,QAAA,YAAY,EAAEC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAI,CAACJ,SAAL,EAAgB;AACd,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WACE;AAAK,MAAA,EAAE,EAAC,2BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,SAAS,CAACK,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAED,KAAK,CAACE,IAAxB;AAA8B,QAAA,YAAY,EAAEF,KAAK,CAACG,OAAlD;AAA2D,QAAA,UAAU,EAAEH,KAAK,CAACI,KAA7E;AAAoF,QAAA,eAAe,EAAEJ,KAAK,CAACK,WAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANA,CADH,CADF,CADF,CADF;AAeD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,gBAAgB,GACbkB,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAEc,QAAQ,CAACE;AAAtB,OAAd;AACD,KAHH,EAIGC,KAJH,CAIShB,KAAK,IAAI;AACd,WAAKc,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAEF,KAAK,CAACiB,OAAN,CAAcC,MADf;AAEZf,QAAAA,YAAY,EAAEgB,IAAI,CAACC,KAAL,CAAWpB,KAAK,CAACiB,OAAN,CAAcI,YAAzB,EAAuCC,OAFzC;AAGZtB,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD,KAVH;AAWD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKtB,mBAAL,EAAP;AACD;;AAxDmC;;AA2DtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport autoBind from 'react-autobind';\nimport Track from './subcomponents/Track';\nimport Loading from '../../common/components/Loading';\nimport ErrorView from '../../common/components/ErrorView';\nimport { getUserTopTracks } from '../../common/apiUtils';\nimport './user-top-tracks.css';\n\nclass UserTopTracks extends Component {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n\n    this.state = {\n      topTracks: null,\n      error: false,\n    };\n  }\n\n  renderUserTopTracks() {\n    let { topTracks, error, errorStatus, errorMessage } = this.state;\n\n    if (error) {\n      return <ErrorView status={errorStatus} errorMessage={errorMessage} />;\n    }\n\n    if (!topTracks) {\n      return <Loading />;\n    }\n\n    return (\n      <div id=\"user-top-tracks-container\">\n        <div className=\"custom-card m-3 p-3\">\n          <div className=\"track-container\">\n            {topTracks.map((track, index) => {\n              return (\n                <div>\n                  <Track trackName={track.name} trackArtists={track.artists} trackImage={track.image} trackPreviewURL={track.preview_url} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    getUserTopTracks()\n      .then(response => {\n        this.setState({ topTracks: response.data });\n      })\n      .catch(error => {\n        this.setState({\n          errorStatus: error.request.status,\n          errorMessage: JSON.parse(error.request.responseText).message,\n          error: true,\n        });\n      });\n  }\n\n  render() {\n    return this.renderUserTopTracks();\n  }\n}\n\nexport default UserTopTracks;\n"]},"metadata":{},"sourceType":"module"}