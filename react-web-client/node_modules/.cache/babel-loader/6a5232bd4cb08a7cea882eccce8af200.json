{"ast":null,"code":"import _defineProperty from \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/sidebar/Sidebar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './sidebar.css';\nimport { getProfileDataAction } from '../../actions/profileActions';\nimport { setSidebarStatusAction } from '../../actions/navigationActions';\nimport { isBelowMediumBreakpoint, isBelowSmallBreakpoint } from '../../common/constants';\nimport SpotifyLogoutButton from '../sign-in/SpotifyLogoutButton';\nimport { Image } from 'react-bootstrap';\nimport autoBind from 'react-autobind';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    let _this$props = this.props,\n        getUserProfileData = _this$props.getUserProfileData,\n        setSidebarOpenStatus = _this$props.setSidebarOpenStatus;\n    getUserProfileData();\n    window.addEventListener('resize', () => {\n      if (isBelowMediumBreakpoint()) {\n        if (this.props.open) {\n          setSidebarOpenStatus(false);\n        }\n      } else {\n        if (!this.props.open) {\n          setSidebarOpenStatus(true);\n        }\n      }\n    });\n  }\n\n  handleSidebarClose() {\n    this.props.setSidebarOpenStatus(false);\n  }\n\n  render() {\n    let _this$props2 = this.props,\n        user = _this$props2.user,\n        open = _this$props2.open;\n    let sidebarWidth = 200;\n\n    if (isBelowSmallBreakpoint()) {\n      sidebarWidth = 160;\n    }\n\n    let image = user.images ? user.images[0] : null;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"main-sidebar-ghost\",\n      style: {\n        width: open && !isBelowMediumBreakpoint() ? \"\".concat(sidebarWidth, \"px\") : '0px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-sidebar\",\n      style: {\n        marginLeft: open ? '0px' : \"-\".concat(sidebarWidth + 20, \"px\"),\n        width: \"\".concat(sidebarWidth, \"px\"),\n        overflowY: isBelowMediumBreakpoint() ? 'auto' : 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Apollo's Playlist\"), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" Logged in profile: \"), React.createElement(Image, {\n      src: image ? image.url : '/img/placeholder-image.png',\n      fluid: true,\n      roundedCircle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, user.displayName), React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Spotify Followers: \", user.followers ? user.followers.total : null), React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Country: \", user.country)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(SpotifyLogoutButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"main-sidebar-overlay\",\n      className: open && isBelowMediumBreakpoint() ? '' : 'd-none',\n      onClick: this.handleSidebarClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({\n  user: state.user\n}, state.nav.sidebar);\n\nconst mapDispatchToProps = dispatch => ({\n  getUserProfileData: () => dispatch(getProfileDataAction()),\n  setSidebarOpenStatus: open => dispatch(setSidebarStatusAction(open))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","map":{"version":3,"sources":["/Users/shashwatsingh/Desktop/work/apollos-playlist/react-web-client/src/modules/sidebar/Sidebar.jsx"],"names":["React","Component","connect","getProfileDataAction","setSidebarStatusAction","isBelowMediumBreakpoint","isBelowSmallBreakpoint","SpotifyLogoutButton","Image","autoBind","Sidebar","constructor","props","componentDidMount","getUserProfileData","setSidebarOpenStatus","window","addEventListener","open","handleSidebarClose","render","user","sidebarWidth","image","images","width","marginLeft","overflowY","url","displayName","followers","total","country","mapStateToProps","state","nav","sidebar","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './sidebar.css';\nimport { getProfileDataAction } from '../../actions/profileActions';\nimport { setSidebarStatusAction } from '../../actions/navigationActions';\nimport { isBelowMediumBreakpoint, isBelowSmallBreakpoint } from '../../common/constants';\nimport SpotifyLogoutButton from '../sign-in/SpotifyLogoutButton';\nimport { Image } from 'react-bootstrap';\nimport autoBind from 'react-autobind';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    let { getUserProfileData, setSidebarOpenStatus } = this.props;\n    getUserProfileData();\n\n    window.addEventListener('resize', () => {\n      if (isBelowMediumBreakpoint()) {\n        if (this.props.open) {\n          setSidebarOpenStatus(false);\n        }\n      } else {\n        if (!this.props.open) {\n          setSidebarOpenStatus(true);\n        }\n      }\n    });\n  }\n\n  handleSidebarClose() {\n    this.props.setSidebarOpenStatus(false);\n  }\n\n  render() {\n    let { user, open } = this.props;\n\n    let sidebarWidth = 200;\n    if (isBelowSmallBreakpoint()) {\n      sidebarWidth = 160;\n    }\n\n    let image = user.images ? user.images[0] : null;\n\n    return (\n      <div>\n        <div\n          id=\"main-sidebar-ghost\"\n          style={{\n            width: open && !isBelowMediumBreakpoint() ? `${sidebarWidth}px` : '0px',\n          }}\n        />\n        <div\n          id=\"main-sidebar\"\n          style={{\n            marginLeft: open ? '0px' : `-${sidebarWidth + 20}px`,\n            width: `${sidebarWidth}px`,\n            overflowY: isBelowMediumBreakpoint() ? 'auto' : 'hidden',\n          }}\n        >\n          <h1>Apollo's Playlist</h1>\n          <div className=\"text-center\">\n            <h5> Logged in profile: </h5>\n\n            <Image src={image ? image.url : '/img/placeholder-image.png'} fluid roundedCircle />\n            <h6>{user.displayName}</h6>\n            <p className=\"mb-0\">Spotify Followers: {user.followers ? user.followers.total : null}</p>\n            <p className=\"mb-0\">Country: {user.country}</p>\n          </div>\n          <br />\n          <br />\n          <div>\n            <SpotifyLogoutButton />\n          </div>\n        </div>\n        <div\n          id=\"main-sidebar-overlay\"\n          className={open && isBelowMediumBreakpoint() ? '' : 'd-none'}\n          onClick={this.handleSidebarClose}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  ...state.nav.sidebar,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUserProfileData: () => dispatch(getProfileDataAction()),\n  setSidebarOpenStatus: open => dispatch(setSidebarStatusAction(open)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}